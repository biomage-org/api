openapi: 3.0.0
info:
  title: API
  version: 2.0.0
  description: The main Node.js pipeline API.
  license:
    name: MIT
    url: 'https://github.com/hms-dbmi-cellenics/api/blob/master/LICENSE'
  contact:
    name: Biomage Ltd.
servers:
  - url: /v2
tags:
  - name: experiments
    description: Manage your experiments and experiment details.
  - name: heartbeat
    description: API health checks.
  - name: work
    description: Submitting and receiving work.
  - name: processing-config
    description: Structure for configuration of processing steps.
paths:
  /health:
    get:
      tags:
        - heartbeat
      summary: API health check
      operationId: checkHealth
      x-eov-operation-id: health#check
      x-eov-operation-handler: routes/health
      responses:
        '200':
          description: API is available.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    pattern: up
                  env:
                    type: string
                    enum:
                      - development
                      - test
                      - staging
                      - production
                  clusterEnv:
                    type: string
                    enum:
                      - development
                      - test
                      - staging
                      - production
                required:
                  - status
                  - env
                  - clusterEnv
      description: Returns a status on the health of the API.
  '/experiments/{experimentId}/processingConfig':
    get:
      summary: Get processing configuration for an experiment
      description: Get processing configuration for an experiment
      operationId: getProcessingConfig
      x-eov-operation-id: experiment#getProcessingConfig
      x-eov-operation-handler: routes/experiment
      responses:
        '200':
          description: get processing configuration for an experiment
          content:
            application/json:
              schema:
                anyOf:
                  - type: object
                    additionalProperties: false
                  - $ref: '#/components/schemas/ProcessingConfig'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'        
        '401':
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'        
        '404':
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        
    put:
      summary: Update processing configuration for an experiment
      description: Update processing configuration for an experiment
      operationId: updateProcessingConfig
      x-eov-operation-id: experiment#updateProcessingConfig
      x-eov-operation-handler: routes/experiment
      responses:
        '200':
          description: Processing configuration for an experiment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPSuccess'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '401':
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        
  '/experiments':
    get:
      summary: Get all experiments
      description: Get all experiments that the user can access
      operationId: getAllExperiments
      x-eov-operation-id: experiment#getAllExperiments
      x-eov-operation-handler: routes/experiment
      responses:
        '200':
          description: All experiments that the user can acess
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllExperiments'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '401':
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
  '/experiments/{experimentId}':
    get:
      summary: Get an experiment
      description: Get an experiment
      operationId: getExperiment
      x-eov-operation-id: experiment#getExperiment
      x-eov-operation-handler: routes/experiment
      responses:
        '200':
          description: Get experiment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentInfo'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '401':
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '403':
          description: Forbidden request for this user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
    post:
      summary: Create experiment
      description: Create a new experiment
      operationId: createExperiment
      x-eov-operation-id: experiment#createExperiment
      x-eov-operation-handler: routes/experiment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExperiment'
      responses:
        '200':
          description: Create experiment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPSuccess'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '401':
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
    patch:
      summary: Patch an experiment
      description: Update some properties in an experiment
      operationId: patchExperiment
      x-eov-operation-id: experiment#patchExperiment
      x-eov-operation-handler: routes/experiment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchExperiment'
      responses:
        '200':
          description: Create experiment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPSuccess'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '401':
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '403':
          description: Forbidden request for this user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
  '/experiments/{experimentId}/backendStatus':
    get:
      summary: Get backend status for an experiment
      description: Get the status fo qc, gem2s and the worker for an experiment
      operationId: getBackendStatus
      x-eov-operation-id: experiment#getBackendStatus
      x-eov-operation-handler: routes/experiment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '401':
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '403':
          description: The authenticated user is not authorized to view this resource.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
        '404':
          description: Experiment not found.
          content:
            application/json:
              schema:
                $ref: ./models/HTTPError.v1.yaml
    parameters:
      - schema:
          type: string
        name: experimentId
        in: path
        required: true
        description: ID of the experiment
  
  '/experiments/{experimentId}/samples/{sampleId}':
    post:
      summary: Create sample
      operationId: createSample
      x-eov-operation-id: sample#createSample
      x-eov-operation-handler: routes/sample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSample'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPSuccess'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '401':
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '403':
          description: Forbidden request for this user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
    patch:
      summary: Patch sample
      operationId: patchSample
      x-eov-operation-id: sample#patchSample
      x-eov-operation-handler: routes/sample
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              additionalProperties: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPSuccess'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '401':
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '403':
          description: Forbidden request for this user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'

    delete:
      summary: Delete sample
      operationId: deleteSample
      x-eov-operation-id: sample#deleteSample
      x-eov-operation-handler: routes/sample
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPSuccess'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '401':
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '403':
          description: Forbidden request for this user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
  '/experiments/{experimentId}/samples/position':
    put:
      summary: Update position for a sample
      description: Set a new position for a sample
      operationId: updateSamplePosition
      x-eov-operation-id: experiment#updateSamplePosition
      x-eov-operation-handler: routes/experiment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPosition: 
                  type: integer
                newPosition:
                  type: integer
              required:
                - oldPosition
                - newPosition
              additionalProperties: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPSuccess'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '401':
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '403':
          description: Forbidden request for this user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'

  '/experiments/{experimentId}/metadataTracks/{metadataTrackKey}':
    post:
      summary: Creates a new metadata track
      description: Creates a new metadata track
      operationId: createMetadataTrack
      x-eov-operation-id: metadataTrack#createMetadataTrack
      x-eov-operation-handler: routes/metadataTrack
      # requestBody:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPSuccess'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '401':
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '403':
          description: Forbidden request for this user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
    patch:
      summary: Updates a metadata tracks properties
      description: Updates a metadata tracks properties
      operationId: patchMetadataTrack
      x-eov-operation-id: metadataTrack#patchMetadataTrack
      x-eov-operation-handler: routes/metadataTrack
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
              required:
                - key
              additionalProperties: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPSuccess'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '401':
          description: The request lacks authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '403':
          description: Forbidden request for this user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        '404':
          description: Not found error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'

components:
  schemas:
    CreateExperiment:
      $ref: './models/experiment-bodies/CreateExperiment.v2.yaml'
    ExperimentInfo:
      $ref: './models/experiment-bodies/ExperimentInfo.v2.yaml'
    PatchExperiment:
      $ref: './models/experiment-bodies/PatchExperiment.v2.yaml'
    ProcessingConfig:
      $ref: './models/experiment-bodies/ProcessingConfig.v2.yaml'
    GetAllExperiments:
      $ref: './models/experiment-bodies/GetAllExperiments.v2.yaml'
    CreateSample:
      $ref: './models/samples-bodies/CreateSample.v2.yaml'
    HTTPSuccess:
      $ref: './models/HTTPSuccess.v1.yaml'
    HTTPError:
      $ref: './models/HTTPError.v1.yaml'